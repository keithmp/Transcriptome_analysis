
![image](https://github.com/yongzhiyang2012/Transcriptome_analysis/tree/master/image/Hisat-pipline.png?raw=true) 


第一步：Hisat 比对。
使用方法非常类似 Bowtie2 等，先建库，再比对，没有添加其他的非默认参数。

hisat2 -x genome_reference -p num_of_cpu_used --fr --min-intronlen 20 --max-intronlen 500000 -1 SampleA_ReadsA_1.gz， SampleA_ReadsB_1.gz, … -2 SampleA_ReadsA_2.gz, SampleA_ReadsB_2.gz, … |samtools view -bS -o SampleA.bam –

-x 后面添加胡杨参考基因组建库路径;
-p 参数后面填写本次计算需要占用的CPU数目,一般10个以上就可以很迅速的完成比对;
--fr 表示本次使用的是双末端不区分正反链的Reads数据; 
--min-tronlen 表示Reads比对到基因组上拆分一条mRNA Reads时允许的最短内含子长度20 是程序默认的参数;
-max-tronlen 就表示允许的最长内含子长度, 500000是程序默认的参数;
-1 后面添加双末端测序左Reads文件,多个文件用逗号隔开;
-2 后面添加双末端测序右Reads文件,多个文件同样用逗号隔开; 

第二步StringTie
1.利用StringTie结合第一版的胡杨基因注释结果,注释所有转录本；
2.然后利用StringTie的Merge模式合并所有样本的注释结果,生成Merge.gtf这个总的结果；
3.再一次运行Stringtie, 将上一步得到的Merge.gtf作为新的注释参考,加入-e参数,表示不注释新的转录本,只统计Merge.gtf中所有转录本的表达量和Reads比对情况,得到比对Reads数目的统计,进一步得到表达量FPKM.另外在这一步需要加 -B 参数,用于产生后续Ballgown的输入文件；

/home/share/users/zhangcaihua2013/program/stringtie/stringtie-1.2.3.Linux_x86_64/stringtie  a1.sort.bam -G 注释文件.gtf  -o gtf输出的输出文件  -p 16 -B -e

-B参数表示需要输出为 Ballgown 准备的输入文件
-e 表示不注释新的转录本，只统计提供的 gff 文件中注释的转录本。



第三步 Ballgown

(1)	Source(“http://bioconductor.org/biocLite.R”)
biocLite(“ballgown”)
首先我们利用BiocLite工具包来安装Bollgown R包；以及相关的依赖包，包括RSkittleBrewer，geneflter，dplyr/plyr，devtools，GenomicAlignments等；使用library或者require加载他们。
(2)	bg=ballgown(dataDir=/path/to/ballgownInputData, samplePattern="P")
将StringTie生成的Ballgown输入文件读入到ballgown，具体信息存储在bg变量中。其中dataDir设置为存放Stringtie利用 -b 参数输出的比对数据目录；samplePattern 代表一个匹配的表达式，本项目中设置为“P”，表示将所有名字起始字符为“P”的所有文件夹读入到bg变量中，也可以设置为“”（空字符串），那就表示读入所有dataDir参数提供的目录下面的文件夹（每一个样本的比对信息存储在一个单独的文件夹中）
(3)	pData(bg) = data.frame(id=sampleNames(bg), group=rep(c(1,2,3,4,5,6,7,8), each=3), concentration=rep(c(0,1,2,3,0,1,2,3), each=3), species=rep(c("Peu","Ppr"), each=12))
用一个数据表将所有样本的变量信息标识清楚，将这个信息同时传递给ballgown。其中group是默认参数用来设置生物学重复的分组信息；concentration是一个自定义的变量在本项目中表示浓度，是第一个变量，而species表示物种是本项目中第二个自定义变量。
。
(4)	bg_filt=subset(bg,"rowVars(texpr(bg)) >1",genomesubset=TRUE)
转录组注释过程中回产生很多低丰度（low-abundance）转录本，如果不过滤掉这些转录本在分析的过程中产生的大量“背景噪音”会影响目标差异表达转录本的观测。所以这一步我们去掉了那些在说有样本中转录本的表达量（FPKM）方差小于1的转录本。这些主要是那些表达量极低的转录本。其中texpr是ballgown中返回转录本表达量的函数；rowVars是R的标准函数，用来计算一列数据的方差（Variance）；subset是ballgown中专门用来根据给定规则过滤ballgown数据对象的函数。
(5)	result_transcript=stattest(bg_filt, feature="transcript", covariate="concentration ", adjustvars=c("species"), meas="FPKM")
本条命令将挑选出两个物种中随着浓度变化同样差异表达的转录本。Stattest是ballgown中用来计算差异表达的函数：bg_filt是上一步得到的过滤好的转录本数据集；feature="transcript"表示在转录本级别鉴定差异表达，也可以选择基因级别（gene）和外显子级别（exon）；covariate用来设置感兴趣的主变量，而adjustvars可以用来设置多个想要排除影响的变量；meas="FPKM"表示处理表达量数据来鉴定差异表达转录本。
(6)	write.table (result_transcrit,file="./result_genes")
本命令将鉴定好的差异表达转录本以列表形式输出到当前目录的文件result_genes中。
(7)	result_transcript=arrange(result_transcript,pval)
将差异表达转录本的结果按照P值的显著度进行排序；
(8)	subset(result_transcript,result_transcript$qval<0.05)
过滤差异表达转录本，只保留q<0.05的结果。
(9)	write.table(subset(result_genes,result_genes$qval<0.05), file=result_transcript_q)
(10)	将q<0.05，满足显著差异表达的转录本输出到文件result_transcript_q.
(11)	write.csv(ballgown::transcriptNames(bg_filt),file="transcritName.lst")
本命令是过渡命令，因为输出的差异表达转录本输出的文件中只有以数字编号的转录本编号，这里讲转录本的名字和编号对应的关系输出来，方便后续处理。
(12)	采用一致的方法，设置主变量为物种，协变量为浓度，鉴定并输出和物种相关的差异表达转录本。

